the ``0-add_integer`` module
======================

Using ``0-add_integer``
-------------------

First import ``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Test cases:

one parameter:
    >>> add_integer(1)
    99

two parameters:
    >>> add_integer(1,1)
    2

negative parameters:
    >>> add_integer(-1,1)
    0

One positive one negative:
    >>> add_integer(1,-2)
    -1

Adding two parameters:
    >>> add_integer(1,1)
    2

Decimal and integers:
    >>> add_integer(1.98, 1)
    2

No Parameters:
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

Adding two letters:
    >>> add_integer('a','b')
    Traceback (most recent call last):
    TypeError: a must be an integer

Adding number and letters:
    >>> add_integer(1, 'b')
    Traceback (most recent call last):
    TypeError: b must be an integer

None passed:
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(5, float("nan"))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(True, False)
    Traceback (most recent call last):
    TypeError: a must be an integer