the ``2-matrix_divided`` module
======================

Using ``0-add_integer``
-------------------

First import ``add_integer`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> not_matrix = [[1, 2, 3], [4, 5]]
    >>> typ_matrix = [['1', '2', '3'], ['4', '5', '6']]

Test cases:

Basic case:
    >>>print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

No integer or float matrix:
    >>>print(typ_matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Not square:
    >>> print(not_matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Divide by Zero:
    >>>print(matrix_divided(matrix, 0))
    Traceback (most recent call last)
    ...
    ZeroDivisionError: division by zero

Divide not number:
    >>>print(matrix_divided(matrix, '2'))
    Traceback (most recent call last)
    ...
    TypeError: div must be a number
